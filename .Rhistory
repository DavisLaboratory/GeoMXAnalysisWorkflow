usethis::use_pkgdown()
pkgdown::build_site()
.Last.error.trace
?pkgdown::build_site()
?pkgdown::build_site(example = FALSE)
pkgdown::build_site(example = FALSE)
usethis::use_pkgdown()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site_github_pages()
devtools::check()
devtools::document()
devtools::check()
devtools::check()
devtools::check()
pkgdown::build_site_github_pages()
pkgdown::build_site()
library(devtools)
pkgdown::build_site()
pkgdown::build_site()
#set knitr chunk options
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
#load packages to avoid startup messages later in the code
library(standR)
library(SpatialExperiment)
library(limma)
library(edgeR)
library(tidyverse)
library(vissE)
library(GSEABase)
library(msigdb)
library(ggalluvial)
library(ExperimentHub)
#automatically create a bib database for R packages
knitr::write_bib(c(
.packages(), 'knitr', 'rmarkdown', 'prettydoc'
), 'packages.bib')
library(ExperimentHub)
eh <- ExperimentHub()
query(eh, "standR")
countFile <- eh[["EH7364"]]
sampleAnnoFile <- eh[["EH7365"]]
featureAnnoFile <- eh[["EH7366"]]
countFile
read.csv(countFile)
read.delim(countFile, nrows = 10)[,1:5]
read.tsv(countFile, nrows = 10)[,1:5]
read.delim(countFile, nrows = 10)[,1:5]
read.delim(sampleAnnoFile, nrows = 5)[,1:8]
read.delim(sampleAnnoFile, nrows = 5)[,1:3]
read.delim(sampleAnnoFile, nrows = 5) |> colnames()
read.delim(sampleAnnoFile, nrows = 5)[,1:5]
read.delim(featureAnnoFile, nrows = 5)
?readGeoMx
spe <- readGeoMx(countFile, sampleAnnoFile, featureAnnoFile = featureAnnoFile)
spe
pkgdown::build_site()
#set knitr chunk options
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
#load packages to avoid startup messages later in the code
library(standR)
library(SpatialExperiment)
library(limma)
library(edgeR)
library(tidyverse)
library(vissE)
library(GSEABase)
library(msigdb)
library(ggalluvial)
library(ExperimentHub)
#automatically create a bib database for R packages
knitr::write_bib(c(
.packages(), 'knitr', 'rmarkdown', 'prettydoc'
), 'packages.bib')
library(ExperimentHub)
eh <- ExperimentHub()
query(eh, "standR")
assayNames(spe)
#set knitr chunk options
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
#load packages to avoid startup messages later in the code
library(standR)
library(SpatialExperiment)
library(limma)
library(edgeR)
library(tidyverse)
library(vissE)
library(GSEABase)
library(msigdb)
library(ggalluvial)
library(ExperimentHub)
#automatically create a bib database for R packages
knitr::write_bib(c(
.packages(), 'knitr', 'rmarkdown', 'prettydoc'
), 'packages.bib')
library(ExperimentHub)
eh <- ExperimentHub()
query(eh, "standR")
countFile <- eh[["EH7364"]]
sampleAnnoFile <- eh[["EH7365"]]
featureAnnoFile <- eh[["EH7366"]]
read.delim(countFile, nrows = 5)[,1:3]
read.delim(sampleAnnoFile, nrows = 5)[,1:5]
read.delim(featureAnnoFile, nrows = 5)
spe <- readGeoMx(countFile, sampleAnnoFile, featureAnnoFile = featureAnnoFile)
spe
assayNames(spe)
plotSampleInfo(spe, column2plot = c("SlideName","disease_status","region","SegmentLabel","pathology"))
